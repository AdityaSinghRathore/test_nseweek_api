{"version":3,"sources":["App.js","index.js"],"names":["App","useState","gainers","setGainers","symbol","setSymbol","stockData","setStockData","useEffect","fetch","then","res","console","log","body","json","data","style","padding","margin","maxWidth","Typography","variant","align","component","gutterBottom","length","Paper","Grid","container","alignItems","spacing","item","xs","InputLabel","id","Select","labelId","value","onChange","event","target","map","i","MenuItem","Button","onClick","labels","dates","datasets","label","fill","lineTension","backgroundColor","borderColor","borderWidth","truth","predictions","options","title","display","text","fontSize","legend","position","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPAsIeA,MA5Hf,WAAgB,IAAD,EACmBC,mBAAS,IAD5B,mBACJC,EADI,KACKC,EADL,OAEiBF,mBAAS,IAF1B,mBAEJG,EAFI,KAEIC,EAFJ,OAGuBJ,mBAAS,IAHhC,mBAGJK,EAHI,KAGOC,EAHP,KAuDX,OAlDAC,qBAAU,WACNC,MAAM,gBACDC,MAAK,SAACC,GAEH,OADAC,QAAQC,IAAIF,EAAIG,MACTH,EAAII,UAEdL,MAAK,SAACM,GACHJ,QAAQC,IAAIG,GACZb,EAAWa,QAEpB,IAyCC,sBAAKC,MAAO,CAAEC,QAAS,GAAIC,OAAQ,OAAQC,SAAU,KAArD,UACI,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAM,SAASC,UAAU,KAAKC,cAAY,EAAnE,0CAGA,cAACJ,EAAA,EAAD,CACIC,QAAQ,UACRC,MAAM,SACNC,UAAU,IACVC,cAAY,EAJhB,yGASCvB,GAAWA,EAAQwB,OAAS,GACzB,cAACC,EAAA,EAAD,CAAOV,MAAO,CAAEC,QAAS,IAAzB,SACI,eAACU,EAAA,EAAD,CAAMC,WAAS,EAACC,WAAW,aAAaC,QAAS,EAAjD,UACI,eAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAf,UACI,cAACC,EAAA,EAAD,CAAYC,GAAG,2BAAf,2BAGA,cAACC,EAAA,EAAD,CACIC,QAAQ,2BACRF,GAAG,qBACHG,MAAOlC,EACPmC,SA/DP,SAACC,GAClBnC,EAAUmC,EAAMC,OAAOH,OACvB/B,EAAa,KAyDO,SAMKL,EAAQwC,KAAI,SAACV,EAAMW,GAChB,OACI,cAACC,EAAA,EAAD,CAAUN,MAAON,EAAjB,SACKA,GADuBW,WAO5C,cAACf,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAf,SACI,cAACY,EAAA,EAAD,CAAQC,QAtEV,WAGlBrC,MAAM,gBAFML,GAGPM,MAAK,SAACC,GAAD,OAASA,EAAII,UAClBL,MAAK,SAACM,GACHT,EAAa,2BACND,GADK,IAERyC,OAAQ/B,EAAKgC,MACbC,SAAU,CACN,CACIC,MAAM,gBAAD,OAAkB9C,GACvB+C,MAAM,EACNC,YAAa,GACbC,gBAAiB,UACjBC,YAAa,UACbC,YAAa,EACbvC,KAAMA,EAAKwC,OAEf,CACIN,MAAM,mBAAD,OAAqB9C,GAC1B+C,MAAM,EACNC,YAAa,GACbC,gBAAiB,UACjBC,YAAa,UACbC,YAAa,EACbvC,KAAMA,EAAKyC,qBA4CX,wBAMfnD,EAAUyC,QACP,cAACpB,EAAA,EAAD,CAAOV,MAAO,CAAEC,QAAS,IAAzB,SACI,cAACU,EAAA,EAAD,CAAMC,WAAS,EAACC,WAAW,aAAaC,QAAS,EAAjD,SACI,cAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAf,SACI,cAAC,IAAD,CACIjB,KAAMV,EACNoD,QAAS,CACLC,MAAO,CACHC,SAAS,EACTC,KAAK,yBAAD,OAA2BzD,GAC/B0D,SAAU,IAEdC,OAAQ,CACJH,SAAS,EACTI,SAAU,sBCtHlDC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.529f278a.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport Paper from \"@material-ui/core/Paper\"\nimport Typography from \"@material-ui/core/Typography\"\nimport InputLabel from \"@material-ui/core/InputLabel\"\nimport Grid from \"@material-ui/core/Grid\"\nimport MenuItem from \"@material-ui/core/MenuItem\"\nimport Select from \"@material-ui/core/Select\"\nimport Button from \"@material-ui/core/Button\"\nimport { Line } from \"react-chartjs-2\"\n\nfunction App() {\n    const [gainers, setGainers] = useState([])\n    const [symbol, setSymbol] = useState(\"\")\n    const [stockData, setStockData] = useState({})\n\n    useEffect(() => {\n        fetch(\"/api/gainers\")\n            .then((res) => {\n                console.log(res.body)\n                return res.json()\n            })\n            .then((data) => {\n                console.log(data)\n                setGainers(data)\n            })\n    }, [])\n\n    const handleChange = (event) => {\n        setSymbol(event.target.value)\n        setStockData({})\n    }\n\n    const getPredctions = () => {\n        let stock = symbol\n\n        fetch(\"/api/predict/\" + stock)\n            .then((res) => res.json())\n            .then((data) => {\n                setStockData({\n                    ...stockData,\n                    labels: data.dates,\n                    datasets: [\n                        {\n                            label: `Actual Close ${symbol}`,\n                            fill: false,\n                            lineTension: 0.5,\n                            backgroundColor: \"#03DAC6\",\n                            borderColor: \"#018786\",\n                            borderWidth: 2,\n                            data: data.truth,\n                        },\n                        {\n                            label: `Predicted CLose ${symbol}`,\n                            fill: false,\n                            lineTension: 0.5,\n                            backgroundColor: \"#C20000\",\n                            borderColor: \"#F06461\",\n                            borderWidth: 2,\n                            data: data.predictions,\n                        },\n                    ],\n                })\n            })\n    }\n\n    return (\n        <div style={{ padding: 16, margin: \"auto\", maxWidth: 600 }}>\n            <Typography variant=\"h4\" align=\"center\" component=\"h1\" gutterBottom>\n                ðŸ“ˆ Stock Predictor\n            </Typography>\n            <Typography\n                variant=\"caption\"\n                align=\"center\"\n                component=\"p\"\n                gutterBottom\n            >\n                DISCLAIMER: This is an experimental project not to be used for\n                making investment decisions.\n            </Typography>\n            {gainers && gainers.length > 0 && (\n                <Paper style={{ padding: 16 }}>\n                    <Grid container alignItems=\"flex-start\" spacing={2}>\n                        <Grid item xs={6}>\n                            <InputLabel id=\"demo-simple-select-label\">\n                                Select Symbol\n                            </InputLabel>\n                            <Select\n                                labelId=\"demo-simple-select-label\"\n                                id=\"demo-simple-select\"\n                                value={symbol}\n                                onChange={handleChange}\n                            >\n                                {gainers.map((item, i) => {\n                                    return (\n                                        <MenuItem value={item} key={i}>\n                                            {item}\n                                        </MenuItem>\n                                    )\n                                })}\n                            </Select>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Button onClick={getPredctions}>GET</Button>\n                        </Grid>\n                    </Grid>\n                </Paper>\n            )}\n\n            {stockData.labels && (\n                <Paper style={{ padding: 16 }}>\n                    <Grid container alignItems=\"flex-start\" spacing={2}>\n                        <Grid item xs={12}>\n                            <Line\n                                data={stockData}\n                                options={{\n                                    title: {\n                                        display: true,\n                                        text: `Actual Vs Predictions ${symbol}`,\n                                        fontSize: 20,\n                                    },\n                                    legend: {\n                                        display: true,\n                                        position: \"right\",\n                                    },\n                                }}\n                            />\n                        </Grid>\n                    </Grid>\n                </Paper>\n            )}\n        </div>\n    )\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n"],"sourceRoot":""}